// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Test.localhost {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="ServiceSoap", Namespace="http://rextester.com/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DoWorkOperationCompleted;
        
        public Service() {
            this.Url = "http://localhost:8080/Service.asmx";
        }
        
        public Service(string url) {
            this.Url = url;
        }
        
        public event DoWorkCompletedEventHandler DoWorkCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rextester.com/DoWork", RequestNamespace="http://rextester.com/", ResponseNamespace="http://rextester.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Result DoWork(string Program, Languages Language) {
            object[] results = this.Invoke("DoWork", new object[] {
                        Program,
                        Language});
            return ((Result)(results[0]));
        }
        
        public System.IAsyncResult BeginDoWork(string Program, Languages Language, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DoWork", new object[] {
                        Program,
                        Language}, callback, asyncState);
        }
        
        public Result EndDoWork(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Result)(results[0]));
        }
        
        public void DoWorkAsync(string Program, Languages Language) {
            this.DoWorkAsync(Program, Language, null);
        }
        
        public void DoWorkAsync(string Program, Languages Language, object userState) {
            if ((this.DoWorkOperationCompleted == null)) {
                this.DoWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            this.InvokeAsync("DoWork", new object[] {
                        Program,
                        Language}, this.DoWorkOperationCompleted, userState);
        }
        
        private void OnDoWorkCompleted(object arg) {
            if ((this.DoWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoWorkCompleted(this, new DoWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rextester.com/")]
    public enum Languages {
        
        /// <remarks/>
        Java,
        
        /// <remarks/>
        Python,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        CPP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rextester.com/")]
    public partial class Result {
        
        /// <remarks/>
        public string Errors;
        
        /// <remarks/>
        public string Warnings;
        
        /// <remarks/>
        public string Output;
        
        /// <remarks/>
        public string Stats;
    }
    
    public partial class DoWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    public delegate void DoWorkCompletedEventHandler(object sender, DoWorkCompletedEventArgs args);
}
